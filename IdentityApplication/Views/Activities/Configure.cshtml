@model SchoolManagement.ViewModels.ViewModels.ActivityVM

@{
    ViewData["Title"] = "Configure";
}

<h1>Configure Activity @Model.Activity.Name</h1>
<hr />
<form asp-action="Configure">
    <div class="row">
        <div class="col-md-4">
            @Html.HiddenFor(a => Model.Activity.Id)
            @Html.HiddenFor(a => Model.Activity.Name)
            @Html.HiddenFor(a => Model.School.Id)
            @Html.HiddenFor(a => Model.School.Name)

            @if (Model.Grades != null && Model.Grades.Count > 0)
            {
                <p>Select Activity Classes</p>
                for (int i = 0; i < Model.Grades.Count; i++)
                {
                    @Html.HiddenFor(au => Model.Grades[i].Name)
                    @Html.HiddenFor(au => Model.Grades[i].Id)

                    <ul class="list-group list-group-flush">
                        @Model.Grades[i].Name

                        @if (Model.Grades[i].Classes != null)
                        {
                            for (int j = 0; j < Model.Grades[i].Classes.Count; j++)
                            {
                                @Html.HiddenFor(au => Model.Grades[i].Classes[j].Name)
                                @Html.HiddenFor(au => Model.Grades[i].Classes[j].Id)

                                <li class="list-group-item">
                                    <div class="custom-control custom-checkbox btn-group">
                                        <div class="row">
                                            <div class="col-auto">
                                                @Html.CheckBoxFor(x => Model.Grades[i].Classes[j].IsSelected, new { @class = "custom-control-input", @id = Model.Grades[i].Classes[j].Id })
                                                <label class="custom-control-label" for="@Model.Grades[i].Classes[j].Id">@Model.Grades[i].Classes[j].Name</label>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                    </ul>
                }
            }
        </div>
        <div class="col-md-4">
            @if (Model.UserTypes != null && Model.UserTypes.Count > 0)
            {
                <p>Select Activity User Types</p>
                for (int i = 0; i < Model.UserTypes.Count; i++)
                {
                    @Html.HiddenFor(au => Model.UserTypes[i].Name)
                    @Html.HiddenFor(au => Model.UserTypes[i].Id)

                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">
                            <div class="custom-control custom-checkbox btn-group">
                                <div class="row">
                                    <div class="col-auto">
                                        @Html.CheckBoxFor(x => Model.UserTypes[i].IsSelected, new { @class = "custom-control-input", @id = Model.UserTypes[i].Id })
                                        <label class="custom-control-label" for="@Model.UserTypes[i].Id">@Model.UserTypes[i].Name</label>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                }
            }
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Configure" class="btn btn-primary" />
    </div>
</form>
<div>
    <a asp-action="Index" asp-route-schoolId="@Model.School.Id">Back to List</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

<script type="text/javascript">
</script>
}  